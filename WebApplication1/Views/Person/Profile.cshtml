@model BLL.PageModel.MemberModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<style type="text/css">
    .row {
        width: 800px !important;
        margin-top: 10%;
        margin-left: 20%;
    }
    .name {
        display:flex;
    }
</style>
<div class="container">
    <div class="row">
        <div class="col-12">
            @{
                if (Model.customer != null)
                {
                    using (Html.BeginForm("Save", "Person", FormMethod.Post, new { id = "CustomerForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group" style="display:none;">
                            @Html.TextBoxFor(m => m.customer.CustomerID)
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.CompanyName)
                            @Html.TextBoxFor(m => m.customer.CompanyName, new { @class = "form-control" })
                            <span asp-validation-for='customer.CompanyName' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.ContactName)
                            @Html.TextBoxFor(m => m.customer.ContactName, new { @class = "form-control" })
                            <span asp-validation-for='customer.ContactName' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.ContactTitle)
                            @Html.TextBoxFor(m => m.customer.ContactTitle, new { @class = "form-control" })
                            <span asp-validation-for='customer.ContactTitle' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.Phone)
                            @Html.TextBoxFor(m => m.customer.Phone, new { @class = "form-control" })
                            <span asp-validation-for='customer.Phone' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.Fax)
                            @Html.TextBoxFor(m => m.customer.Fax, new { @class = "form-control" })
                            <span asp-validation-for='customer.Fax' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.customer.Address)
                            @Html.TextBoxFor(m => m.customer.Address, new { @class = "form-control" })
                            <span asp-validation-for='customer.Address' class="message"></span>
                        </div>
                        <input type="button" class="btn btn-primary btn-block" id="submit" value="Save" />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    }
                }
                else if (Model.employee != null)
                {
                    using (Html.BeginForm("Save", "Person", FormMethod.Post, new { id = "EmployeeForm" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group" style="display:none;">
                            @Html.TextBoxFor(m => m.employee.EmployeeID)
                        </div>
                        <div class="form-group">
                            @Html.Label("name", "姓名")
                            <div class="name">
                                @Html.TextBoxFor(m => m.employee.FirstName, new { @class = "form-control", @width = "50%" })
                                <span asp-validation-for='employee.FirstName' class="message"></span>
                                @Html.TextBoxFor(m => m.employee.LastName, new { @class = "form-control", @width = "50%" })
                                <span asp-validation-for='employee.LastName' class="message"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.employee.BirthDate)
                            @Html.TextBoxFor(m => m.employee.BirthDate, new { @class = "form-control" })
                            <span asp-validation-for='employee.BirthDate' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.employee.HomePhone)
                            @Html.TextBoxFor(m => m.employee.HomePhone, new { @class = "form-control" })
                            <span asp-validation-for='employee.HomePhone' class="message"></span>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.employee.Address)
                            @Html.TextBoxFor(m => m.employee.Address, new { @class = "form-control" })
                            <span asp-validation-for='employee.Address' class="message"></span>
                        </div>
                        <input type="button" class="btn btn-primary btn-block" id="submit" value="Save" />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    }
                }
                else if (!Model.IsSuccess)
                {
                    <script type="text/javascript">
                        $('#msgModalbody').text('@Model.ErrorMsg').css({ 'color': 'blue'});;
                        $('#msgModal').modal('show');
                    </script>
                }
            }
        </div>
    </div>
    @Html.Partial("BootstrapModal")
</div>

<script type="text/javascript">
    //關閉Alert
    function closeModal() {
        $('#msgModal').modal('hide');
    }

    $(function () {

        //當為員工，則設定日期格式
        if ($("#EmployeeForm").is(":visible")) {
            $("#employee_BirthDate").datepicker({
                format: "yyyy-mm-dd",
                locale: "zh-tw"
            });

            //format Data control
            if ($('#employee_BirthDate').val().length > 0) $('#employee_BirthDate').val($('#employee_BirthDate').val().substring(0, 10));

            $('#employee_BirthDate').datepicker("setDate", $('#employee_BirthDate').val());
        }

        $("#submit").click(function () {

            var isValid = false;
            if($("#EmployeeForm").is(":visible")){
                isValid = $("#EmployeeForm").valid();
            } else {
                isValid = $("#CustomerForm").valid();
            }

            if (isValid) {
                var data = {
                    employee: {
                        EmployeeID: null,
                        FirstName: null,
                        LastName: null,
                        BirthDate: null,
                        HomePhone: null,
                        Address: null,
                        Account: null,
                    },
                    customer: {
                        CustomerID: null,
                        CompanyName: null,
                        ContactTitle: null,
                        Phone: null,
                        Fax: null,
                        Address: null,
                        Account: null,
                    }
                };
                if ($("#EmployeeForm").is(":visible")) {
                    data.employee.EmployeeID = $("#employee_EmployeeID").val();
                    data.employee.FirstName = $("#employee_FirstName").val();
                    data.employee.LastName = $("#employee_LastName").val();
                    data.employee.BirthDate = $("#employee_BirthDate").val();
                    data.employee.HomePhone = $("#employee_HomePhone").val();
                    data.employee.Address = $("#employee_Address").val();
                    data.employee.Account = $("#employee_Account").val();
                }
                else{
                    data.customer.CustomerID = $("#customer_CustomerID").val();
                    data.customer.CompanyName = $("#customer_CompanyName").val();
                    data.customer.ContactTitle = $("#customer_ContactTitle").val();
                    data.customer.Phone = $("#customer_Phone").val();
                    data.customer.Fax = $("#customer_Fax").val();
                    data.customer.Address = $("#customer_Address").val();
                    data.customer.Account = $("#customer_Account").val();
                }
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("UpdateMember", "Person")',
                    data: {
                        __RequestVerificationToken: '@GetAntiXsrfRequestToken()',
                        member: data,
                    },
                    async: true,
                    success: function (data) {
                        if (data != null) {
                            $('#msgModalbody').text(data).css({ 'color': 'blue'});;
                            $('#msgModal').modal('show');
                        }
                    },
                    error: function (error) {
                        if (error != null && error.responseText != '') {
                            $('#msgModalbody').text(error.responseText).css({ 'color': 'red'});
                            $('#msgModal').modal('show');
                            $("#account").val('');
                            $("#password").val('');
                        }
                    }
                });
            }
        });
    });
                    </script>

